"actions": |-
  ---
  initial: true
  code: |
    process_action()
  ---
  question: |
    Review your information.
  subquestion: |
    Your favorite color is
    ${ color }.
    [Change this]( ${ url_action('color') } )
  field: info_is_verified
  ---
"actions-parameters": |-
  ---
  initial: true
  code: |
    process_action()
  ---
  question: |
    Review your information.
  subquestion: |
    You have ${ fishes['blue'] } blue
    fishes.
    [Add blue fish]( ${ url_action('add',
      color='blue') } )

    You have ${ fishes['red'] } red
    fishes.
    [Add red fish]( ${ url_action('add',
      color='red') } )
  field: info_is_verified
  ---
  event: add
  code: |
    fishes[action_argument('color')] += 1
  ---
"age_in_years": |-
  ---
  question: |
    What is your date of birth?
  fields:
    - no label: user.birthdate
      datatype: date
  ---
  question: |
    You are ${ user.age_in_years() }
    years old.
  mandatory: true
  ---
"alarm-clock": |-
  ---
  modules:
    - docassemble.base.util
  ---
"alignment": |-
  ---
  question: Here is your document.
  subquestion: It has aligned text.
  attachments:
    - name: A test document
      filename: test_document
      content: |
        [BOLDCENTER] A Document That
        Explains Things To You

        This is a big important document.
        It addresses all of the concerns
        that you might have with the
        benefits to which you may be
        entitled, now, in the future,
        or in the past, whichever comes
        first.

        [CENTER] Benefits Summary

        ${ client } is entitled to
        benefits plan ${ benefits }.

        For more information about the
        benefits to which you may or may
        not be entitled, whether on this
        planet or another planet in the
        solar system, contact:

        [FLUSHLEFT] Andrea Advocate [BR]
        123 Riverside Drive [BR]
        Fort Franklin, AR 92302

        By comparison, this uses the
        standard Markdown flushleft
        environment:

        | Andrea Advocate
        | 123 Riverside Drive
        | Fort Franklin, AR 92302
  mandatory: true
  ---
"all_variables": "---\nmandatory: true\nquestion: |\n  Interview dictionary\nsubquestion:\
  \ |\n  The variables in the dictionary are:\n    \n  `${ all_variables() }`\n---"
"allow-emailing-false": |-
  ---
  question: Your document is ready.
  sets: provide_user_with_document
  attachment:
    - name: A hello world document
      filename: Hello_World
      description: |
        A document with a classic message
      content: |
        Hello, world!
  allow emailing: false
  ---
"allow-emailing-true": |-
  ---
  question: Your document is ready.
  sets: provide_user_with_document
  attachment:
    - name: A hello world document
      filename: Hello_World
      description: |
        A document with a classic message
      content: |
        Hello, world!
  ---
"as-datetime": "---\nquestion: |\n  The Delorean will go back in time to \n  ${ as_datetime('11/5/1955').year\
  \ }.\nmandatory: true\n---"
"attachment": |-
  ---
  question: Your document is ready.
  sets: provide_user_with_document
  attachment:
    - name: A hello world document
      valid formats:
        - pdf
      filename: Hello_World
      description: |
        A document with a classic message
      content: |
        Hello, world!
  ---
"attachment-code": |-
  ---
  mandatory: true
  question: |
    Here are your documents!
  attachment code: |
    [doc_one, doc_two, doc_three]
  ---
  attachment:
    name: The first document
    filename: document_one
    description: |
      This is the first document
      of a series.
    variable name: doc_one
    content: |
      Hello, world number one!
  ---
  attachment:
    name: The second document
    filename: document_two
    description: |
      This is the second document
      of a series.
    variable name: doc_two
    content: |
      Hello, world number two!
  ---
  attachment:
    name: The third document
    filename: document_three
    description: |
      This is the third document
      of a series.
    variable name: doc_three
    content: |
      Hello, world number three!
  ---
"audio": |-
  ---
  audio: schumann-clip-1.mp3
  question: You need to relax.
  subquestion: |
    Listen to some Schumann, and then
    proceed.
  field: user_is_relaxed
  ---
"background_action": |-
  ---
  initial: true
  code: |
    process_action()
  ---
  question: |
    How much shall I add to 553?
  fields:
    - Number: value_to_add
      datatype: integer
  ---
  code: |
    the_task = background_action('bg_task', None, additional=value_to_add)
  ---
  event: bg_task
  code: |
    background_response(553 + action_argument('additional'))
  ---
  mandatory: true
  code: |
    if the_task.ready():
      final_screen
    else:
      waiting_screen
  ---
"background_action_flash": |-
  ---
  code: |
    the_task = background_action('bg_task', 'flash', additional=value_to_add)
  ---
  event: bg_task
  code: |
    the_answer = str(553 + action_argument('additional'))
    background_response("The answer is " + the_answer + ".")
  ---
"background_action_javascript": |-
  ---
  code: |
    the_task = background_action('bg_task', 'javascript', additional=value_to_add)
  ---
  event: bg_task
  code: |
    the_answer = str(553 + action_argument('additional'))
    background_response("alert('The answer is " + the_answer + ".');")
  ---
"background_action_refresh": |-
  ---
  code: |
    the_task = background_action('bg_task', 'refresh', additional=value_to_add)
  ---
  event: bg_task
  code: |
    value = 553 + action_argument('additional')
    background_response_action('bg_resp', ans=value)
  ---
  event: bg_resp
  code: |
    answer = action_argument('ans')
  ---
  event: final_screen
  question: |
    The answer is ${ answer }.
  ---
"background_action_with_response_action": |-
  ---
  initial: true
  code: |
    process_action()
  ---
  question: |
    How much shall I add to 553?
  fields:
    - Number: value_to_add
      datatype: integer
  ---
  code: |
    the_task = background_action('bg_task', None, additional=value_to_add)
  ---
  event: bg_task
  code: |
    value = 553 + action_argument('additional')
    background_response_action('bg_resp', ans=value)
  ---
  event: bg_resp
  code: |
    answer = action_argument('ans')
  ---
  mandatory: true
  code: |
    if the_task.ready():
      final_screen
    else:
      waiting_screen
  ---
"background_response_action_flash": |-
  ---
  code: |
    the_task = background_action('bg_task', 'flash', additional=value_to_add)
  ---
  event: bg_task
  code: |
    value = 553 + action_argument('additional')
    background_response_action('bg_resp', ans=value)
  ---
  event: bg_resp
  code: |
    answer = action_argument('ans')
    background_response("The answer is " + str(answer) + ".")
  ---
"blank-label-field": |-
  ---
  question: |
    What is your Zodiac sign?
  fields:
    - "": target_variable
  ---
"buttons": |-
  ---
  question: |
    What type of belly button do you
    have?
  field: target_variable
  buttons:
    - Innie
    - Outie
    - No belly button
  ---
"buttons-code": |-
  ---
  question: What kind of car do you want?
  buttons:
    - Ford Focus:
        code: |
          car_model = "Focus"
          car_make = "Ford"
    - Toyota Camry:
        code: |
          car_model = "Camry"
          car_make = "Toyota"
  ---
"buttons-code-color": |-
  ---
  question: What is your favorite color?
  buttons:
    - Red:
        question: Dark red or light red?
        field: favorite_color
        buttons:
          - Dark Red
          - Light Red
    - Green:
        question: Dark green or light green?
        field: favorite_color
        buttons:
          - Dark Green
          - Light Green
  ---
"buttons-code-list": |-
  ---
  field: target_variable
  question: |
    Your use of this system does not
    mean that you have a lawyer.  Do
    you understand this?
  buttons:
    - "I understand": understands
    - code: |
        [{'does not understand':"I do not understand"}, {'unsure':"I'm not sure"}]
  ---
"buttons-code-list-equivalent": |-
  ---
  field: target_variable
  question: |
    Your use of this system does not
    mean that you have a lawyer.  Do
    you understand this?
  buttons:
    - "I understand": understands
    - "I do not understand": does not understand
    - "I'm not sure": unsure
  ---
"buttons-icons": |-
  ---
  question: |
    What is the most important question
    to ask?
  field: interrogatory
  buttons:
    - "When?": when
      image: calendar
    - "Where?": where
      image: map
  ---
"buttons-labels": |-
  ---
  question: |
    How would you like to pay for your
    car?
  field: target_variable
  buttons:
    - Buy it: purchaser
    - Lease it: borrower
  ---
"buttons-variation-1": |-
  ---
  field: user_gender
  question: What is your gender?
  buttons:
    - Male
    - Female
  ---
"buttons-variation-2": |-
  ---
  field: user_gender
  question: What is your gender?
  buttons:
    - Male: Male
    - Female: Female
  ---
"capitalize": |-
  ---
  question: |
    ${ capitalize(color) } is your
    favorite color, but ${ color } is
    not your favorite color of eggs.
  sets: all_done
  ---
"chat": |-
  ---
  mandatory: true
  code: |
    multi_user = True
    set_live_help_status(availability='available', mode='help', partner_roles=['advocate'])
  ---
"chat-example-1": |-
  ---
  mandatory: true
  code: |
    set_live_help_status(availability='available', mode='help', partner_roles=['advocate', 'family law'])
  ---
  mandatory: true
  question: |
    What types of support are you seeking?
  fields:
    - no label: support_types
      datatype: checkboxes
      choices:
        - Child Support
        - Spousal Support
  ---
"chat-example-2": |-
  ---
  mandatory: true
  code: |
    multi_user = True
    set_live_help_status(availability='available', mode='peerhelp', partner_roles=['advocate'])
  ---
"chat-partners-available": |-
  ---
  mandatory: true
  question: |
    Live chat status
  subquestion: |
    % if chat_partners_available('advocate').help > 0:
    An advocate is available to assist you.
    % else:
    No advocates are available to assist you at this time.
    % endif
  ---
"choices": |-
  ---
  question: |
    What type of shoes do you wear?
  field: target_variable
  choices:
    - Sneakers
    - Sandals
    - Clogs
    - Other
  ---
"choices-icons": |-
  ---
  question: |
    What is the most important question
    to ask?
  field: interrogatory
  choices:
    - "When?": when
      image: calendar
    - "Where?": where
      image: map
  ---
"choices-with-default": |-
  ---
  question: |
    What type of shoes do you wear?
  field: target_variable
  default: Sandals
  choices:
    - Sneakers
    - Sandals
    - Clogs
    - Other
  ---
"code": |-
  ---
  code: |
    fruits = peaches + pears
  ---
"code-example-01": |-
  ---
  code: |
    answer = 2 + 2
  ---
  question: |
    The answer is ${ answer }.
  mandatory: true
  ---
"code-example-02": |-
  ---
  code: |
    a = 2
    b = 3
    answer = a + b
  ---
"code-example-03": |-
  ---
  code: |
    a = 2
    b = 3
    answer = a + b
    b = 1
  ---
"code-example-04": |-
  ---
  question: |
    The answer is ${ 2 + 2 }.
  mandatory: true
  ---
"code-example-05": |-
  ---
  question: |
    The answer is ${ ( 42 + 4 ) * 50 / ( 5 - 2 ) }.
  mandatory: true
  ---
"code-example-06": |-
  ---
  question: |
    The answer is ${(42+4)*50/(5-2)}.
  mandatory: true
  ---
"code-example-07": |-
  ---
  code: |
    a = 4
    b = 5
    if b > a:
      b = 62
      answer = 20 + b
    else:
      answer = 40 + b
    b = 0
  ---
"code-example-08": |-
  ---
  code: |
    a = 4
    b = 5
    c = 2
    d = 6
    if b > a:
      b = 62
      if c < d:
        answer = 20 + b
      else:
        answer = 20 + c - d
      d = a + b
    else:
      answer = 40 + b
    b = 0
  ---
"comment": |-
  ---
  question: Do you like turnips?
  yesno: likes_turnips
  comment: |
    This question may be the most important
    question of the interview!
  ---
"comment-weather": "---\nquestion: |\n  Do you agree the weather\n  is nice today?\
  \ \nyesno: day_is_nice\ncomment: |\n  We might wish to consider\n  taking out this\
  \ question.\n  It does not seem necessary.\n---"
"continue": |-
  ---
  field: target_variable
  question: |
    Welcome to the interview.
  subquestion: |
    When you are ready to begin, press
    Continue.
  ---
"continue-button-label": |-
  ---
  question: |
    What is your favorite fruit?
  fields:
    - Fruit: favorite_fruit
  continue button label: Keep going
  ---
"continue-participation": |-
  ---
  question: |
    Welcome to the interview!
  subquestion: |
    Your participation means a lot to us.
  field: user_saw_intro
  ---
"continue-special": |-
  ---
  modules:
    - docassemble.base.util
  ---
"country": |-
  ---
  question: |
    Where do you live?
  fields:
    - Country: user_country
      code: countries_list()
      default: US
  ---
  mandatory: true
  question: |
    You live in
    ${ country_name(user_country) },
    which is abbreviated
    ${ user_country }.
  ---
"currency": |-
  ---
  question: |
    If you sold ${ number } fish for
    a dollar each, you would get
    ${ currency(number) }.
  mandatory: true
  ---
"current-datetime": |-
  ---
  question: |
    % if current_datetime() < as_datetime('October 14, 1066'):
    The Normans have not yet invaded
    England.
    % else:
    Unfortunately, the Normans have
    already invaded England.
    % endif
  mandatory: true
  ---
"dadict": |-
  ---
  modules:
    - docassemble.base.core
  ---
  objects:
    - player: DADict
  ---
  mandatory: true
  code: |
    player.initializeObject('trustee', DAObject)
    player.initializeObject('beneficiary', DAObject)
    player.initializeObject('grantor', DAObject)
  ---
  mandatory: true
  question: The players
  subquestion: |
    % for type in player:
    ${ player[type].firstname }
    ${ player[type].lastname } is here.

    % endfor
  ---
  generic object: DAObject
  question: |
    What is
    ${ x[i].object_possessive('name') }?
  fields:
    - First Name: x[i].firstname
    - Last Name: x[i].lastname
  ---
"dalist": |-
  ---
  modules:
    - docassemble.base.legal
  ---
"dalist2": |-
  ---
  modules:
    - docassemble.base.core
    - docassemble.base.util
  ---
"database_storage": "---\nmandatory: true\ncode: |\n  write_record('fruit', favorite_fruit)\n\
  ---\nreconsider: true\ncode: |\n  fruit_summary = ''\n  records = read_records('fruit')\n\
  \  for id in records:\n    fruit_summary += \"* \" + str(records[id]) + \"\\n\"\n\
  ---\nmandatory: true\nquestion: |\n  Contents of database\nsubquestion: |\n  The\
  \ following fruits have\n  been reported:\n  \n  ${ fruit_summary }\n---"
"date-difference": |-
  ---
  code: |
    birthday = as_datetime('5/17/2016')
    christmas = as_datetime('12/25/2016')
    interval = date_difference(starting=birthday, ending=christmas)
  ---
  question: |
    The length of time between my
    birthday and Christmas can be
    described several ways.
  subquestion: |
    * ${ interval.weeks } weeks
    * ${ interval.days } days
    * ${ interval.hours } hours
    * ${ interval.minutes } minutes
    * ${ interval.seconds } seconds
  mandatory: true
  ---
"date-field": |-
  ---
  question: |
    What is your date of birth?
  fields:
    - Birthdate: target_variable
      datatype: date
  ---
"date-interval": |-
  ---
  question: |
    In three days, it will be
    ${ format_date( current_datetime() + date_interval(days=3) ) }.
  mandatory: true
  ---
"date-parts": |-
  ---
  mandatory: true
  question: The date, explained.
  subquestion: |
    The year is ${ year_of(some_date) }.

    The month is ${ month_of(some_date) }.

    The day of month is ${ day_of(some_date) }.
  ---
"dead-end": |-
  ---
  question: |
    You have reached the end of the interview.
  subquestion: |
    I hope you had a good time!
  mandatory: true
  ---
"decoration": |-
  ---
  decoration: kids
  question:
    Do you have children?
  yesno: has_children
  ---
"def": "---\ndef: my_explanation\nmako: |\n  <%def name=\"explain(fruit)\">\n  ${\
  \ fruit } are a type of fruit, and\n  they are delicious.\n  </%def>\n  <%def name=\"\
  deride(fruit)\">\n  ${ fruit } are disgusting, and they\n  are basically inedible.\n\
  \  </%def>\n---\nquestion: The world of fruit\nsubquestion: |\n  There are many\
  \ types of fruit in the\n  world.\n  \n  ${ explain(\"Peaches\") }\n  ${ explain(\"\
  Oranges\") }\n  ${ deride(\"Strawberries\") }\nusedefs:\n - my_explanation\nmandatory:\
  \ true\n---"
"defined": |-
  ---
  question: Summary
  subquestion: |
    Your favorite fruit is
    ${ favorite_fruit }.

    % if defined('favorite_vegetable'):
    Your favorite vegetable
    is ${ favorite_vegetable }.
    % else:
    I do not know your favorite
    vegetable.
    % endif
  mandatory: true
  ---
"del": |-
  ---
  mandatory: true
  code: |
    if user_is_communist and user_reconsidering_communism:
      user_reconsidering_communism = False
      del user_is_communist
  ---
"dialog-box": |-
  ---
  mandatory: true
  code: |
    if task_not_yet_performed('show current date'):
      mark_task_as_performed('show current date')
      show_date
  ---
  event: show_date
  question: |
    The current date is ${ format_date(current_datetime()) }.
  buttons:
    - Ok: continue
  ---
"document": |-
  ---
  question: Here is your document.
  attachments:
    - name: Summary of Benefits
      filename: benefits_summary
      content: |
        [BOLDCENTER] Summary of Benefits

        ${ client } is entitled to
        benefits plan ${ benefits }.
  mandatory: true
  ---
"doors": |-
  ---
  question: |
    Which door do you choose?
  field: door_choice
  choices:
    - Door Number 1
    - Door Number 2
  ---
  mandatory: true
  code: |
    if door_choice == 'Door Number 1':
      good_luck
    if door_choice == 'Door Number 2':
      bad_luck
  ---
  question: |
    You walk into a field of clover.
  event: good_luck
  ---
  question: |
    You walk into a stinky swamp.
  event: bad_luck
  ---
"email-field": |-
  ---
  question: |
    What is your e-mail address?
  fields:
    - E-mail: target_variable
      datatype: email
      required: false
  ---
"event-example": |-
  ---
  question: |
    This is a special screen.
  event: show_special_screen
  ---
"event-role-event": |-
  ---
  event: role_event
  question: All done for now.
  subquestion: |
    Someone else needs to answer
    questions now.  You will be notified
    when you can resume the interview.
  buttons:
    - Exit: leave
  ---
"exit": |-
  ---
  mandatory: true
  code: |
    command('exit', url=target_url)
  ---
  question: |
    Where do you want to go?
  field: target_url
  buttons:
    - Stanford: "http://stanford.edu/"
    - Harvard: "http://www.harvard.edu/"
  ---
"exit-buttons": |-
  ---
  question: We are all done.
  buttons:
    - Exit: exit
    - Restart: restart
  sets: all_done
  ---
"exit-choices": |-
  ---
  question: We are all done.
  choices:
    - Exit: exit
    - Restart: restart
  sets: all_done
  ---
"exit-url": |-
  ---
  question: |
    Congratulations, you found Nemo!
  buttons:
    - Try again: restart
    - Learn More: exit
      url: https://en.wikipedia.org/wiki/Amphiprioninae
  mandatory: true
  ---
"external_files": |-
  ---
  features:
    javascript: my-functions.js
    css: my-styles.css
  ---
  mandatory: true
  question: |
    A test of Javascript and CSS
  subquestion: |
    <span class="groovy"></span>
  ---
"field-note": |-
  ---
  question: |
    Tell me more about you.
  fields:
    - Favorite fruit: fruit
    - Favorite vegetable: veggie
    - note: |
        I understand that this next
        question is particularly
        difficult to answer, but please
        bear with me.  We are almost
        done.
    - Favorite tree: tree
  ---
"fields": "---\nquestion: Tell me more about yourself\nfields:\n  - Description: user_description\n\
  \    datatype: area\n    hint: |\n      E.g., you can describe your\n      hair\
  \ color, eye color, \n      favorite movies, etc.\n  - Annual income: user_annual_income\n\
  \    datatype: currency\n    min: 100\n  - E-mail address: user_email_address\n\
  \    datatype: email\n  - Been vaccinated: user_vaccinated\n    datatype: yesno\n\
  \  - Seen Mount Rushmore: mount_rushmore_visited\n    datatype: yesnowide\n  - Opinion\
  \ of turnips: turnip_rating\n    datatype: range\n    min: 1\n    max: 10\n  - Belly\
  \ button type: belly_button\n    datatype: radio\n    choices:\n      - Innie\n\
  \      - Outie\n  - html: |\n      The date and time is\n      <span class=\"mytime\"\
  \n      id=\"today_time\"></span>.\n  - script: |\n      <script>\n        document.getElementById(\"\
  today_time\").innerHTML = Date();\n      </script>\n  - css: |\n      <link rel=\"\
  stylesheet\" \n      href=\"${ url_of('docassemble.demo:data/static/my.css') }\"\
  >\n  - Number of friends: num_friends\n    datatype: radio\n    choices:\n     \
  \ - One: 1\n      - Two: 2\n      - Three: 3\n  - Degrees obtained: degrees\n  \
  \  datatype: checkboxes\n    choices:\n      - High school\n      - College\n  \
  \    - Graduate school\n  - State you grew up in: home_state\n    code: |\n    \
  \  us.states.mapping('abbr', 'name')\n  - note: |\n      #### Politics\n\n     \
  \ Tell me about your political\n      views.\n  - no label: political_views\n  \
  \  default: I have no political views\n    maxlength: 30\n  - Party: political_party\n\
  \    datatype: radio\n    shuffle: true \n    choices:\n      - Republican\n   \
  \   - Democrat\n      - Independent\n---"
"fields-checkboxes": |-
  ---
  question: |
    Please tell me what you think.
  fields:
    - "Select the fruits you like": likes_fruit
      datatype: checkboxes
      choices:
        - Apples
        - Peaches
        - Pears
    - "What is your favorite fruit overall?": favorite_fruit
  ---
"fields-choices": |-
  ---
  question: |
    What is your favorite fruit?
  fields:
    - Fruit: favorite_fruit
      choices:
        - Apples: apple
        - Oranges: orange
        - Pears: pear
  ---
"fields-mc": |-
  ---
  question: |
    What is your favorite fruit?
  fields:
    - Fruit: favorite_fruit
      code: |
        myoptions
  ---
  question: |
    What is your brother's favorite
    fruit?
  fields:
    - Fruit: favorite_fruit_of_brother
      code: |
        myoptions
  ---
  code: |
    myoptions = [
                  {'apple': "Apples"},
                  {'orange': "Oranges"},
                  {'pear': "Pears"}
                ]
  ---
"fields-noyesmaybe": |-
  ---
  question: |
    Please answer the following question.
  fields:
    - "Was Washington the first U.S. president?": washington_not_the_first_president
      datatype: noyesmaybe
  ---
"fields-yesno": |-
  ---
  question: |
    Please provide the following information.
  fields:
    - "What is your favorite food?": favorite_food
    - note: Check which foods you like.
    - Apples: likes_apples
      datatype: yesno
    - Turnips: dislikes_turnips
      datatype: noyes
  ---
"fields-yesnomaybe": |-
  ---
  question: |
    Please answer the following question.
  fields:
    - "Is Topeka the capital of Kansas?": topeka_is_capital_of_kansas
      datatype: yesnomaybe
  ---
"fields-yesnoradio": |-
  ---
  question: |
    Please provide the following information.
  fields:
    - "Do you like apricots?": likes_apricots
      datatype: yesnoradio
    - "Do you like pineapple?": dislikes_pineapple
      datatype: noyesradio
  ---
"fields-yesnowide": |-
  ---
  question: |
    Please provide the following information.
  fields:
    - note: Check which foods you like.
    - Peaches: likes_peaches
      datatype: yesnowide
    - Pears: dislikes_pears
      datatype: noyeswide
  ---
"file": |-
  ---
  question: |
    Please upload a file
  fields:
    - File: the_file
      datatype: file
  ---
"flushleft": "---\nmandatory: true\nquestion: |\n  Here is your document.\nsubquestion:\
  \ |\n  It demonstrates the flush left environment.\nattachments:\n  - name: A test\
  \ document\n    filename: test_document\n    content: |\n      This line is indented.\n\
  \      \n      This line is also indented.\n      \n      [FLUSHLEFT] This line\
  \ is not indented. [NEWLINE] Nor is this line.\n---"
"flushright": "---\nmandatory: true\nquestion: |\n  Here is your document.\nsubquestion:\
  \ |\n  It demonstrates the flush right environment.\nattachments:\n  - name: A test\
  \ document\n    filename: test_document\n    metadata:\n      FirstHeaderLeft: Test\
  \ me test me\n      FirstHeaderCenter: Test me test me\n      FirstHeaderRight:\
  \ |\n        Example, LLP [BR]\n        124 Main Street, Suite 1500 [BR]\n     \
  \   Philadelphia, PA 19102\n      HeaderLeft: Test me test me\n      HeaderCenter:\
  \ Test me test me\n      HeaderRight: |\n        Example, LLP [BR]\n        123--24\
  \ Main Street, Suite 1500 [BR]\n        Philadelphia, PA 19102\n      FirstFooterLeft:\
  \ Test me test me\n      FirstFooterCenter: Test me test me\n      FirstFooterRight:\
  \ |\n        Example, LLP [BR]\n        124 Main Street, _Suite_ 1500 [BR]\n   \
  \     Philadelphia, PA 19102\n      FooterLeft: Test me test me\n      FooterCenter:\
  \ Test me test me\n      FooterRight: |\n        Example, LLP [BR]\n        123\
  \ Main Street, Suite 1500 [BR]\n        Philadelphia, PA 19102\n      SingleSpacing:\
  \ true\n    content: |\n      This \"line\" is to the left.\n      \n      This\
  \ line is \"also\" to the left.\n      \n      [FLUSHRIGHT] This line is \"flush\"\
  \ right. [NEWLINE] So is _this_ line.\n\n      [INDENTBY 1in] [BORDER] This **line**\
  \ is indented. [NEWLINE] So is this line.\n\n      [BORDER] [INDENTBY 2in 1in] This\
  \ is a very \"confined\" paragraph\n      that is not to be taken lightly---because\
  \ it's so absolutely\n      constrained beyond any belief or any person's imagination\
  \ in the\n      whole wide world under the sun and the moon and the barn down\n\
  \      the street.\n\n      fruit| price\n      -----|-----:\n      apple|2.05\n\
  \      pear|1.37\n      orange|3.09\n\n      Lorem ipsum \"dolor\" sit amet from\
  \ 1--2, consectetur adipiscing elit. Nunc\n      quis odio a dolor rhoncus elementum\
  \ ut sed ex. Lorem ipsum dolor\n      sit amet, consectetur adipiscing elit. Aenean\
  \ blandit massa nec\n      ante rutrum, nec interdum ipsum auctor. Pellentesque\
  \ posuere\n      rhoncus pulvinar. Cras rutrum---if I may say---tellus sit amet\
  \ elit euismod, quis\n      viverra metus dignissim. Aenean id convallis eros. Vestibulum\n\
  \      tristique, erat non ornare rhoncus, lectus urna consectetur\n      urna,\
  \ sit amet rhoncus magna est a orci. Sed sed euismod tortor.\n\n      [BORDER] Aliquam\
  \ nec turpis massa. Integer non vulputate nibh. Integer mi\n      justo, sagittis\
  \ eget erat quis, porta auctor purus. Quisque ac\n      rutrum nibh. Duis id massa\
  \ faucibus, facilisis mauris sit amet,\n      congue nisl. Duis vel odio vehicula,\
  \ sodales tellus ut, tempor\n      ipsum. Morbi tempor aliquam gravida. Aliquam\
  \ tortor est,\n      tincidunt sed libero et, vehicula ullamcorper tellus. Curabitur\n\
  \      quis magna erat. Vivamus euismod gravida ante, eu congue arcu\n      ultricies\
  \ ac. Praesent porta euismod urna non sodales.\n      [NEWPAR]\n      Phasellus\
  \ orci diam, sodales a elementum ac, gravida sit amet\n      erat. Nunc imperdiet\
  \ malesuada magna, nec laoreet tortor dapibus\n      in. Praesent nulla elit, rhoncus\
  \ vitae tincidunt non, rutrum ut\n      justo. Suspendisse aliquam sollicitudin\
  \ porttitor. In suscipit,\n      magna sit amet eleifend iaculis, nisl elit sodales\
  \ diam, dapibus\n      rutrum odio augue sed velit. Ut ullamcorper, quam at dapibus\n\
  \      hendrerit, nibh libero vulputate massa, non pretium nisl libero\n      at\
  \ enim. Donec vestibulum sapien purus, et mattis nunc ultricies\n      non. Morbi\
  \ velit lacus, ornare a lectus sed, auctor accumsan\n      ante. Donec imperdiet\
  \ quis velit non varius. Suspendisse in\n      ultricies massa, id venenatis arcu.\n\
  \n      In vitae erat luctus urna rutrum convallis et id nibh. Fusce\n      suscipit\
  \ lacus at ligula mattis, vitae maximus nunc\n      ultrices. Praesent pellentesque\
  \ nulla sem. Donec rhoncus leo\n      velit. Ut nec dui accumsan, commodo elit ac,\
  \ maximus\n      lacus. Curabitur malesuada tortor augue, quis mattis augue\n  \
  \    aliquet vel. Mauris gravida orci at neque dictum\n      scelerisque. Quisque\
  \ turpis quam, dignissim ut augue quis,\n      euismod placerat nisi. Donec convallis\
  \ mollis varius. Fusce\n      posuere rutrum risus vel porta. Curabitur erat diam,\
  \ semper vel\n      condimentum vitae, fringilla non neque. Etiam nec nunc id est\n\
  \      pharetra dignissim. Nam condimentum nibh sit amet erat mattis\n      suscipit\
  \ vitae vel eros. Donec eu pellentesque arcu, vitae\n      euismod tortor. Aliquam\
  \ accumsan nulla aliquam diam ultricies\n      venenatis.\n\n      Cras mattis tellus\
  \ neque, ut congue mi scelerisque eget. Cras\n      finibus tincidunt augue, ut\
  \ rutrum risus vehicula vel. Praesent\n      fermentum tortor posuere feugiat interdum.\
  \ Ut turpis arcu,\n      sagittis vitae odio vel, gravida cursus urna. Suspendisse\n\
  \      dignissim tortor id iaculis tincidunt. Nulla\n      facilisi. Suspendisse\
  \ lacinia nisl interdum, egestas turpis non,\n      fringilla felis.\n---"
"for_fruit": |-
  ---
  code: |
    fruit_list = ['peaches', 'pears', 'apricots']
  ---
  question: |
    Summary of fruit
  subquestion: |
    % for fruit in fruit_list:
    I assume you like ${ fruit }.
    % endfor
  mandatory: true
  ---
"force-ask": |-
  ---
  mandatory: true
  code: |
    if user_is_communist and user_reconsidering_communism:
      user_reconsidering_communism = False
      force_ask('user_is_communist')
  ---
"force-gather": |-
  ---
  initial: true
  code: |
    process_action()
  ---
  event: gather_it
  code: |
    force_gather('favorite_food')
  ---
"formatting": "---\nquestion: |\n  Here is your document.\nsubquestion: |\n  It illustrates\
  \ some document-related\n  features.\nallow emailing: false\nattachments:\n  - name:\
  \ A test document\n    filename: test_document\n    valid formats:\n      - pdf\n\
  \    metadata:\n      FooterCenter: |\n        [HYPHEN] [PAGENUM] [HYPHEN]\n   \
  \ content: |\n      [BOLDCENTER] A Test Document [BR]\n      by John Doe\n     \
  \ \n      ${ client } is entitled to\n      benefits plan ${ benefits }.\n\n   \
  \   Four score and seven years ago\n      our fathers brought forth on\n      this\
  \ continent, a new nation,\n      conceived in Liberty, and\n      dedicated to\
  \ the proposition\n      that all men are created equal.\n\n      [FILE bluediamond.svg,\
  \ 0.5in]\n\n      Now we are engaged in a great\n      civil war, testing whether\
  \ that\n      nation, or any nation so\n      conceived and so dedicated,\n    \
  \  can long endure.\n\n      [PAGEBREAK]\n\n      Now we begin a new[EMDASH]and\n\
  \      very exciting[EMDASH]page.\n\n      We dare not forget today that\n     \
  \ we are the heirs of that first\n      revolution. Let the word go\n      forth\
  \ from this time and place,\n      to friend and foe alike, that\n      the torch\
  \ has been passed to\n      a new generation of\n      Americans [ENDASH] born in\
  \ this\n      century, tempered by war,\n      disciplined by a hard and\n     \
  \ bitter peace, proud of our\n      ancient heritage, and unwilling\n      to witness\
  \ or permit the slow\n      undoing of those human rights\n      to which this nation\
  \ has\n      always been committed, and to\n      which we are committed today\n\
  \      at home and around the world.\n\n      And yet our distress comes from\n\
  \      no failure of substance. We are\n      stricken by no plague of locusts.\n\
  \      Compared with the perils which\n      our forefathers conquered,\n      because\
  \ they believed and were\n      not afraid, we have still much\n      to be thankful\
  \ for. Nature still\n      offers her bounty and human\n      efforts have multiplied\
  \ it.\n      Plenty is at our doorstep, but\n      a generous use of it languishes\n\
  \      in the very sight of the supply.\n\n      # A new section\n\n      [ONEANDAHALFSPACING]\n\
  \n      [NOINDENTATION]\n\n      My Fellow Americans,\n\n      [INDENTATION]\n\n\
  \      I come before you tonight as a\n      candidate for the Vice Presidency\n\
  \      and as a man whose honesty\n      and -- and integrity has been\n      questioned.\n\
  \n      Now, the usual political thing\n      to do when charges are made\n    \
  \  against you is to either ignore\n      them or to deny them without\n      giving\
  \ details. I believe we've\n      had enough of that in the\n      United States,\
  \ particularly with\n      the present Administration in\n      Washington, D.C.\
  \ To me the\n      office of the Vice Presidency\n      of the United States is\
  \ a great\n      office, and I feel that the\n      people have got to have\n  \
  \    confidence in the integrity\n      of the men who run for that\n      office\
  \ and who might obtain it.\n      \n      # A newer section\n\n      [SINGLESPACING]\n\
  \n      Over a century ago Washington\n      laid the corner stone of the\n    \
  \  Capitol in what was then\n      little more than a tract of\n      wooded wilderness\
  \ here beside\n      the Potomac. We now find it\n      necessary to provide by\
  \ great\n      additional buildings for the\n      business of the government.\n\
  mandatory: true\n---"
"function": |-
  ---
  question: |
    The word ${ color } becomes
    ${ capitalize(color) } when
    passed through the
    `capitalize()` function.
  mandatory: true
  ---
"generic-object": |-
  ---
  generic object: Individual
  question: |
    Does ${ x } like cats?
  yesno: x.likes_cats
  ---
"generic-object-phone-number": |-
  ---
  objects:
    - grantor: Individual
    - grantee: Individual
    - trustee: Individual
  ---
  generic object: Individual
  question: |
    What is
    ${ x.object_possessive('name') }?
  fields:
    - First Name: x.name.first
      default: ${ x.first_name_hint() }
    - Middle Name: x.name.middle
      required: False
    - Last Name: x.name.last
      default: ${ x.last_name_hint() }
    - Suffix: x.name.suffix
      required: False
      code: |
        name_suffix()
  ---
"get-default-timezone": |-
  ---
  question: |
    The default time zone is
    ${ get_default_timezone() }.
  mandatory: true
  ---
"help": |-
  ---
  question: |
    What is 2+2?
  subquestion:
    If you need help answering this question,
    press "Help."
  field: answer
  choices:
    - 3
    - 4
    - 5
  help: |
    Hint: 2 + 2 = 4.
  ---
"help-damages": |-
  ---
  question: |
    How much money do you wish
    to seek in damages?
  fields:
    - Money: damages_sought
      datatype: currency
  help: |
    If you are not sure how much
    money to seek in damages, just ask
    for a million dollars, since you
    want ${ defendant } to suffer.
  ---
"help-damages-audio": |-
  ---
  question: |
    How much money do you wish
    to seek in damages?
  fields:
    - Money: damages_sought
      datatype: currency
  help:
    content: |
      If you are not sure how much
      money to seek in damages, just ask
      for a million dollars, since you
      want ${ defendant } to suffer.
    audio: |
      message_re_damages.mp3
  ---
"hideif-boolean": |-
  ---
  question: |
    Please fill in the following information.
  fields:
    - "Do you you have fruit?": has_fruit
      datatype: yesnoradio
    - "What fruit do you need?": fruit
      hide if: has_fruit
  ---
"html": |-
  ---
  question: |
    I was thinking about your birthday.
  fields:
    - html: |
        The date and time is <span class="mytime" id="today_time"></span>.
    - script: |
        <script>document.getElementById("today_time").innerHTML = Date();</script>
    - css: |
        <link rel="stylesheet" href="${ url_of('docassemble.demo:data/static/my.css') }">
    - "When is your next birthday?": birth_date
      datatype: date
  ---
"image-sets": |-
  ---
  image sets:
    freepik:
      attribution: |
        Icon made by [Freepik](http://www.flaticon.com/authors/freepik)
      images:
        baby: crawling.svg
        money: commerce.svg
  ---
"images": |-
  ---
  images:
    star: star.svg
    diamond: bluediamond.svg
  ---
"immediate_file": |-
  ---
  modules:
    - docassemble.base.util
  ---
"imports": |-
  ---
  imports:
    - pygeocoder
  ---
"include": |-
  ---
  include:
    - docassemble.demo:data/questions/some-questions.yml
  ---
"indefinite-article": |-
  ---
  question: |
    Would you prefer to have
    ${ indefinite_article(fruit) }
    as opposed to
    ${ indefinite_article(vegetable) }?
  yesno: prefer_fruit
  ---
"initial": |-
  ---
  initial: true
  code: |
    counter = counter + 1
  ---
"interview-help": |-
  ---
  interview help:
    heading: About this interview
    content: |
      Answer each question to the best of your
      ability.  If you do not know the answer
      to any question, panic.
  ---
"interview-url": |-
  ---
  modules:
    - docassemble.base.util
  ---
  mandatory: true
  code: |
    multi_user = True
  ---
  question: |
    Ready to proceed?
  subquestion: |
    To invite someone else to complete
    this interview, ask them to go to
    the following URL:
    ${ interview_url() }

    To proceed with the interview,
    click "Yes."
  yesno: ready_to_proceed
  ---
  question: All done
  subquestion: |
    Now we are done with the interview.
  sets: final_screen
  ---
"interview_url_action": |-
  ---
  modules:
    - docassemble.base.util
  ---
  objects:
    - user: Individual
  ---
  mandatory: true
  code: |
    multi_user = True
    status = 'normal'
  ---
  initial: true
  code: |
    process_action()
  ---
  event: check_update_status
  code: |
    if 'status' in action_arguments():
      status = action_argument('status')
  ---
  mandatory: true
  question: |
    The current status is ${ status }.
  subquestion: |
    Anyone can use the following links
    to change the current status:

    * Change to [normal](${ interview_url_action('check_update_status', status='normal') })
    * Change to [danger](${ interview_url_action('check_update_status', status='danger') })
    * Change to [critical](${ interview_url_action('check_update_status', status='critical') })
  ---
"join": |-
  ---
  initial: true
  code: |
    process_action()
    if user_has_privilege('admin', 'developer'):
      advocate_screen
  ---
"label": |-
  ---
  question: |
    What are your favorite things to eat?
  fields:
    - label: Vegetable
      field: favorite_vegetable
    - label: Fruit
      field: favorite_fruit
  ---
"language": "---\nlanguage: es\nquestion: |\n  \xBFCu\xE1l es el significado de la\
  \ vida?\nfields:\n  - Significado de la Vida: meaning_life\n---"
"lastfirst": |-
  ---
  template: client_letter
  content: |
    We need to be prepared to bring a lawsuit against the following:

    % for party in enemy:
    * ${ party.name.lastfirst() }
    % endfor
  ---
  objects:
    enemy: PartyList
  ---
  mandatory: true
  code: |
    enemy.appendObject(Individual)
    enemy[0].name.first = "Darth"
    enemy[0].name.last = "Vader"
    enemy.appendObject(Person)
    enemy[1].name.text = "Death Star Corporation"
    enemy.appendObject(Individual)
    enemy[2].name.first = "Kylo"
    enemy[2].name.last = "Ren"
    enemy.gathered = True
  ---
"leave": |-
  ---
  mandatory: true
  code: |
    command('leave', url=target_url)
  ---
  question: |
    Where do you want to go?
  field: target_url
  buttons:
    - Stanford: "http://stanford.edu/"
    - Harvard: "http://www.harvard.edu/"
  ---
"lists": |-
  ---
  question: Your fears
  subquestion: |
    You are afraid of
    ${ comma_and_list(fears) }.
  sets: all_done
  ---
"live_chat": |-
  ---
  modules:
    - docassemble.base.util
  ---
"loading-legal": |-
  ---
  modules:
    - docassemble.base.legal
  ---
"loading-util": |-
  ---
  modules:
    - docassemble.base.util
  ---
"madlibs": |-
  ---
  question: A funny story
  subquestion: |
    ${ person[0] } went to ${ place[0] }
    to buy
    ${ indefinite_article(noun[0]) }.

    At the ${ place[0] }, there was
    ${ indefinite_article(adjective[0])}
    ${ noun[1] }, which tried to zap
    ${ person[0] }.

    But luckily, ${ person[1] } came out of
    the back room just in time and
    lunged at the ${ noun[1] }, thereby
    saving the day.
  buttons:
    - Do it again: restart
  mandatory: true
  ---
"mako-01": |-
  ---
  mandatory: true
  question: |
    A summary
  subquestion: |
    You like ${ favorite_fruit }
    and ${ favorite_vegetable }.
  ---
  code: |
    favorite_fruit = 'apples'
    favorite_vegetable = 'potatoes'
  ---
"mako-02": |-
  ---
  mandatory: true
  question: |
    Hello!
  subquestion: |
    I hope you are having a good day.

    % if day_of_month == 1:
    Don't forget to change your wall calendar!
    % endif
  ---
"mako-03": |-
  ---
  mandatory: true
  question: |
    Commentary on the day of the month
  subquestion: |
    Let me tell you about today.

    % if day_of_month < 3:
    The month just started!
    % elif day_of_month < 15:
    It is the beginning part of
    the month.
    % else:
    It is the latter part of the month.
    % endif
  ---
"mako-04": |-
  ---
  mandatory: true
  question: |
    Commentary on the day of the month
  subquestion: |
    Let me tell you about today.

    % if day_of_month < 3:
    The month just started!
    % elif day_of_month < 15:
    It is the beginning part of
    the month.
    % else:
    % if month_of_year == 12:
    It is almost New Year's!
    % else:
    It is the latter part of the month.
    % endif
    % endif
  ---
"mandatory": |-
  ---
  mandatory: true
  code: |
    fruits = peaches + pears
    all_done
  ---
"markdown": "---\nquestion: |\n  Introduction to Markdown\nsubquestion: |\n  Markdown\
  \ allows you to express\n  formatting in plain text.\n  \n  # I am a heading\n\n\
  \  Write in *italic text* or even\n  **bold text**.\n\n  ## I am a subheading\n\n\
  \  ### I am a smaller subheading\n\n  To block quote,\n\n  > you can do this.\n\n\
  \  Insert an image:\n\n  ![Markdown logo](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/208px-Markdown-mark.svg.png)\n\
  \n  Here is a bullet list:\n\n  * Larry;\n  * Curly; and\n  * Moe\n\n  Here is a\
  \ numbered list:\n\n  1. Buy groceries.\n  2. Get the car inspected.\n  3. Take\
  \ over the world!\n  \n  You can [Google](http://google.com)\n  \"markdown\" to\
  \ learn more.\nmandatory: true\n---"
"menu-item": |-
  ---
  modules:
    - docassemble.base.util
  ---
  initial: true
  code: |
    process_action()
  ---
  mandatory: true
  code: |
    menu_items = [ action_menu_item('Visit Cow', 'see_cow') ]
  ---
"message": |-
  ---
  code: |
    message("The interview is over.", "Better luck next time!")
  mandatory: true
  ---
"metadata": |-
  ---
  metadata:
    title: |
      Interview title
    short title: |
      The title
    description: |
      This interview produces a Petition To
      Postpone Sheriff Sale.
    authors:
      - name: John Doe
        organization: Example, Inc.
    revision_date: 2016-03-22
    documentation: "http://docassemble.org/docs/initial.html#metadata"
  ---
"min": |-
  ---
  question: |
    What percentage of your friends
    are turnips?
  fields:
    - Percent: percent
      datatype: number
      min: 0
      max: 100
  ---
"minlength": |-
  ---
  question: |
    What is the nuclear launch code?
  fields:
    - Code: launch_code
      minlength: 5
      maxlength: 15
  ---
"ml-classify": |-
  ---
  code: |
    ml = SimpleTextMachineLearner('demo')
  ---
  initial: true
  code: |
    if defined('classification'):
      entry_to_classify.classify(classification)
      del classification
    entry_to_classify = ml.one_unclassified_entry()
    if entry_to_classify is not None:
      need(classification)
  ---
  question: |
    How should this be classified?
  subquestion: |
    > ${ entry_to_classify.independent }
  fields:
    - no label: classification
  ---
  mandatory: true
  question: |
    There is nothing left to classify.
  buttons:
    - Check again: refresh
  ---
"ml-export": |-
  ---
  initial: true
  code: |
    ml = SimpleTextMachineLearner('demo')
    the_data = ml.export_training_set(output_format='json')
    response(response=the_data, content_type='application/json')
  ---
"ml-export-playground": |-
  ---
  modules:
    - docassemble.webapp.playground
    - docassemble.base.util
  ---
  initial: true
  code: |
    ml = SimpleTextMachineLearner('demo')
    the_data = ml.export_training_set(output_format='json')
    sources = PlaygroundSection('sources')
    sources.write_file('my_training_data.json', the_data)
  ---
"ml-export-yaml": |-
  ---
  initial: true
  code: |
    ml = SimpleTextMachineLearner('demo')
    the_data = ml.export_training_set(output_format='yaml')
    response(response=the_data, content_type='text/plain')
  ---
"ml-predict": "---\nquestion: |\n  Enter some text.\nfields:\n  - no label: phrase\n\
  ---\nmandatory: true\ncode: |\n  ml = SimpleTextMachineLearner('demo')\n  predictions\
  \ = ml.predict(phrase)\n---\nmandatory: true\nquestion: |\n  The prediction\nsubquestion:\
  \ |\n  The text provided was:\n  > ${ phrase }\n  \n  % if len(predictions):\n \
  \ The prediction was:\n\n  > ${ predictions[0] }\n  % else:\n  There is not enough\
  \ training data\n  to make a prediction yet.\n  % endif\nbuttons:\n  - Restart:\
  \ restart\n---"
"ml-save-and-predict": |-
  ---
  mandatory: true
  code: |
    ml = SimpleTextMachineLearner('demo')
    ml.save_for_classification(phrase)
    predictions = ml.predict(phrase)
  ---
"modules": |-
  ---
  modules:
    - json
  ---
"money-field": |-
  ---
  question: |
    How much is your house worth?
  fields:
    - Value: target_variable
      datatype: currency
  ---
"name": |-
  ---
  question: |
    What are you fighting?
  field: opponent.name.text
  choices:
    - the Empire
    - the Rebel Alliance
  ---
  mandatory: true
  question: |
    You are fighting
    ${ opponent.name.full() }.
  subquestion: |
    Your enemy is ${ opponent.name }.

    Your opponent is ${ opponent }.
  ---
"name-company": |-
  ---
  question: |
    Do you wish to sue ${ company }?
  yesno: user_wants_to_sue
  ---
"name-company-question": |-
  ---
  question: |
    Do you wish to sue ${ company }?
  yesno: user_wants_to_sue
  ---
"need": |-
  ---
  mandatory: true
  code: |
    need(fruit, all_done)
  ---
"nested-for-loop": |-
  ---
  mandatory: true
  code: |
    for the_person in person:
        need(the_person.name.first)
        for the_child in the_person.child:
            need(the_child.name.first)
            for allergy in the_child.allergy:
                need(allergy)
            need(the_child.allergy.gathered)
        need(the_person.child.gathered)
    need(person.gathered)
    need(all_done)
  ---
"nice-number": |-
  ---
  question: |
    There are ${ nice_number(toads) }
    toads and ${ nice_number(frogs) }
    frogs in the pond.
  buttons:
    - Restart: restart
  sets: all_done
  ---
"no-label-field": |-
  ---
  question: |
    What is your Zodiac sign?
  fields:
    - no label: target_variable
  ---
"note": "---\nquestion: |\n  Please fill in the following information.\nfields:\n\
  \  - Favorite fruit: fruit\n  - Favorite vegetable: vegetable\n  - note: |\n   \
  \   In case you did not know, a \n      mushroom is a fungus, not a vegetable.\n\
  \  - Favorite fungus: mushroom\n---"
"noun-plural": |-
  ---
  question: |
    There
    % if the_number > 1:
    are
    ${ nice_number(the_number) }
    ${ noun_plural(the_noun) }
    % else:
    is one ${ the_noun }
    % endif
    in the pond.
  fields:
    - Singular noun: the_noun
  sets: all_done
  ---
"noyes": |-
  ---
  question: |
    Are you at least 18 years of age?
  noyes: user_is_minor
  ---
"number-field": |-
  ---
  question: |
    Describe your possessions.
  fields:
    - Number of cars: number_cars
      datatype: integer
    - Ounces of gold: gold_ounces
      datatype: number
  ---
"object": |-
  ---
  objects:
    protagonist: Individual
    antagonist: Individual
  ---
  code: |
    protagonist.name.first = "Harry"
    protagonist.name.last = "Potter"
    antagonist.name.first = "Tom"
    antagonist.name.last = "Riddle"
  ---
  question: Who is the villain?
  fields:
    The villain is: villain
    datatype: object
    default: antagonist
    choices:
      - protagonist
      - antagonist
  ---
"object-checkboxes": |-
  ---
  objects:
    protagonist: Individual
    antagonist: Individual
    villain: PartyList
  ---
  code: |
    protagonist.name.first = "Harry"
    protagonist.name.last = "Potter"
    antagonist.name.first = "Tom"
    antagonist.name.last = "Riddle"
  ---
  question: Who are the villains, if any?
  fields:
    no label: villain
    datatype: object_checkboxes
    choices:
      - protagonist
      - antagonist
  ---
"object-radio": |-
  ---
  objects:
    protagonist: Individual
    antagonist: Individual
  ---
  code: |
    protagonist.name.first = "Harry"
    protagonist.name.last = "Potter"
    antagonist.name.first = "Tom"
    antagonist.name.last = "Riddle"
  ---
  question: Who is the villain?
  fields:
    The villain is: villain
    datatype: object_radio
    default: antagonist
    choices:
      - protagonist
      - antagonist
  ---
"object-selections": |-
  ---
  objects:
    protagonist: Individual
    antagonist: Individual
    actors: PartyList
  ---
  code: |
    protagonist.name.first = "Harry"
    protagonist.name.last = "Potter"
    antagonist.name.first = "Tom"
    antagonist.name.last = "Riddle"
    actors.append(protagonist)
    actors.append(antagonist)
    actors.gathered = True
  ---
  question: Who is the villain?
  fields:
    The villain is: villain
    datatype: object
    choices: actors
  ---
"object-try-1": |-
  ---
  include: basic-questions.yml
  ---
  question: |
    What is your favorite date?
  fields:
    - Greatest Date Ever: favorite_date
      datatype: date
      choices:
        - ${ client.birthdate }
        - ${ advocate.birthdate }
  ---
  question: |
    The best day in the history of
    the world was ${ favorite_date }.
  mandatory: true
  ---
"object-try-2": |-
  ---
  question: |
    Who is the tallest?
  fields:
    - Tallest person: tallest_person
      choices:
        - ${ client }
        - ${ advocate }
  ---
"object-try-3": |-
  ---
  include: basic-questions.yml
  ---
  question: Who is the villain?
  fields:
    no label: villain
    datatype: object
    default: client
    choices:
      - client
      - advocate
  ---
  question: |
    The villain, ${ villain }, was
    born on
    ${ format_date(villain.birthdate) }.
  mandatory: true
  ---
"objects": |-
  ---
  objects:
    - hero: Individual
    - villain: Individual
  ---
  modules:
    - docassemble.base.util
  ---
"optional-field": |-
  ---
  question: |
    What are your favorite things to eat?
  subquestion: |
    You may not like any vegetables,
    but at least tell me your favorite
    fruit.
  fields:
    - Vegetable: target_variable
      required: false
    - Fruit: other_target_variable
  ---
"ordinal-number": |-
  ---
  question: |
    The ${ ordinal_number(toads) }
    toad is here to see you.
  buttons:
    - Restart: restart
  sets: all_done
  ---
"other": |-
  ---
  question: |
    What kind of car do you drive?
  fields:
    - Make: car_make
      choices:
        - Honda
        - Toyota
        - Mazda
        - Other
    - Other: car_make
      show if:
        variable: car_make
        is: Other
  ---
"page-numbers": |-
  ---
  question: Here is your document.
  subquestion: It has page numbers.
  attachments:
    - name: Summary of Benefits
      filename: benefits_summary
      metadata:
        FirstFooterRight: Page [PAGENUM]
        FooterRight: Page [PAGENUM]
      content: |
        [BOLDCENTER] Summary of Benefits

        ${ client } is entitled to
        benefits plan ${ benefits }.
  mandatory: true
  ---
"password-field": |-
  ---
  question: |
    Enter your username and password.
  fields:
    - Username: user_name
    - Password: target_variable
      datatype: password
  ---
"past-tense": |-
  ---
  question: |
    I ${ verb_past(the_verb) }
    the apple.
  fields:
    - Present tense verb: the_verb
  sets: all_done
  ---
"periodic-amount": |-
  ---
  modules:
    - docassemble.base.util
  ---
  question: |
    What is your salary?
  fields:
    - Amount: user_salary
      datatype: currency
    - Period: period
      code: |
        period_list()
  ---
"prevent-back": |-
  ---
  code: |
    app_submitted = True
    prevent_going_back()
  ---
"prevent-going-back": |-
  ---
  prevent_going_back: true
  question: |
    Your application for ${ service }
    has been submitted.
  mandatory: true
  ---
"progress": |-
  ---
  question: Are you doing well?
  yesno: user_is_well
  progress: 20
  ---
"progress-features": |-
  ---
  features:
    progress bar: true
  ---
"pull-down": |-
  ---
  question: |
    Describe yourself.
  fields:
    - Level of education: education
      choices:
        - High School
        - College
        - Graduate School
    - Favorite fruit: favorite_fruit
      choices:
        - Apple: apples
        - Pear: pears
        - Strawberry: strawberries
  ---
"pull-down-with-code": |-
  ---
  question: |
    Describe yourself.
  fields:
    - Level of education: education
      choices:
        - High School
        - College
        - Graduate School
    - State of birth: birth_state
      code: |
        us.states.mapping('abbr', 'name')
    - Gender: gender
      code: |
        {'m': 'Male', 'f': 'Female', 'o': 'Other'}
  ---
"qr-code": |-
  ---
  question: |
    Read the news on your mobile
    phone
  subquestion: |
    If you have a QR code reader on
    your phone, point it here:

    ${ qr_code('http://wsj.com') }
  sets: all_done
  ---
"quantity-noun": |-
  ---
  mandatory: true
  question: |
    You have ${ quantity_noun(4, "apple") }.
  ---
"question": |-
  ---
  question: |
    What is the airspeed velocity of an unladen swallow?
  fields:
    - Velocity: swallow_velocity
  ---
"question-markup": |-
  ---
  question: |
    What is the *airspeed* velocity of an unladen ${ african_or_european }
    swallow?
  fields:
    - Velocity: swallow_velocity
  ---
"question-sequence": |-
  ---
  mandatory: true
  question: |
    Lets think about apples
  fields:
    - "Are apples good?": question_one_a
      datatype: yesno
    - "Your favorite variety": question_one_b
  ---
"radio-list": |-
  ---
  question: |
    Describe your car.
  fields:
    - Number of wheels: wheels_on_car
      datatype: integer
    - Type: car_type
      datatype: radio
      choices:
        - Convertible
        - Hatchback
        - Sedan
    - Model: car_country
      datatype: radio
      choices:
        - BMW: Germany
        - Buick: United States
        - Honda: Japan
        - Toyota: Japan
  ---
"range": |-
  ---
  question: |
    On a scale from 1 to 10, how
    much do you like these animals?
  fields:
    - Possums: possum_preference
      datatype: range
      min: 1
      max: 10
      step: 0.5
    - Rabbits: rabbit_preference
      datatype: range
      min: 1
      max: 10
  ---
"reconsider": |-
  ---
  code: |
    cat_food_cans_needed = number_of_cats * 4
  reconsider: true
  ---
"redis": "---\nobjects:\n  r: DARedis\n---\nmandatory: true\ncode: |\n  key = r.key('my_variable')\n\
  \  r.set(key, 'hello world')\n---\nmandatory: true\nquestion: |\n  Value has been\
  \ retrieved from\n  the redis server.\nsubquestion: |\n  The key is `${ key }`.\n\
  \  \n  The value is \"${ r.get(key) }\".\n---"
"refresh": |-
  ---
  question: |
    The current date is ${ format_date(current_datetime()) }.
  buttons:
    - Tell me again: refresh
  mandatory: true
  ---
"reload": |-
  ---
  reload: true
  question: |
    You have viewed this screen
    ${ counter }
    ${ noun_plural('time', counter) }.
  field: acknowledged
  ---
"required-code": |-
  ---
  question: |
    What are your favorite
    things to drink?
  fields:
    - Favorite Beverage Overall: favorite_beverage
    - Favorite Soda: favorite_soda
      required: user_likes_soda
  ---
"reset": |-
  ---
  reset:
    - cat_food_cans_needed
  ---
"response": |-
  ---
  mandatory: true
  code: |
    data = dict(fruit='apple', slices=2)
    response(json.dumps(data), content_type="application/json")
  ---
"response-hello": |-
  ---
  mandatory: true
  code: |
    response("Hello, world!")
  ---
"response-json": "---\nimports:\n  - json\n---\nmodules:\n  - docassemble.base.util\n\
  ---\nobjects:\n  - user: Individual\n---\nmandatory: true\ncode: |\n  multi_user\
  \ = True\n---\ninitial: true\ncode: |\n  process_action()\n---\nevent: query_fruit\n\
  code: |\n  data = dict(fruit=favorite_fruit, slices=number_of_slices)\n  response(json.dumps(data),\
  \ content_type=\"application/json\")\n---\nmandatory: true\nquestion: |\n  You currently\
  \ have\n  ${ nice_number(number_of_slices) }\n  ${ noun_plural('slice', number_of_slices)\
  \ }\n  of\n  ${ noun_singular(favorite_fruit) }.\nsubquestion: |\n  Use\n  [this\
  \ link](${ interview_url_action('query_fruit') })\n  to query the information from\n\
  \  another application.\n\n  You can also change the \n  [fruit](${ url_action('favorite_fruit')\
  \ })\n  and the\n  [number of slices](${ url_action('number_of_slices') }).\n---"
"response-svg": |-
  ---
  mandatory: true
  code: |
    if press_to_continue:
      all_done
  ---
"resume-button-label": |-
  ---
  event: review_answers
  question: |
    Revisit your answers
  review:
    - Revisit fruit: fruit
      button: |
        You indicated you liked
        ${ fruit }.
    - Revisit vegetable: vegetable
      button: |
        You indicated you liked
        ${ vegetable }.
    - Revisit fungus: fungi
      button: |
        You indicated you liked
        ${ fungi }.
  resume button label: Keep going
  ---
"review": |-
  ---
  event: review_answers
  question: |
    Review your answers
  review:
    - note: |
        Welcome to the review of answers.
    - note: |
        #### Your identity
      show if: user.name.first
    - Change your name: user.name.first
      help: |
        You said your name was
        **${ user.name }**.
    - note: |
        #### Your favorite foods
      show if: fruit
    - Revisit Fruit: fruit
      button: |
        You said you liked ${ fruit }.
    - Revisit Vegetable: vegetable
      button: |
        You said you liked ${ vegetable }.
    - Revisit Fungus: fungi
      button: |
        You said you liked ${ fungi }.
    - note: |
        We suspect you prefer
        ${ fruit } to ${ vegetable }.
  ---
"review-1": |-
  ---
  event: review_answers
  question: |
    Revisit questions
  subquestion: |
    These are the questions you have
    answered so far.  Click to revisit.
  review:
    - Favorite fruit: fruit
    - Favorite vegetable: vegetable
    - Favorite fungus: fungi
  ---
  mandatory: true
  code: |
    menu_items = [ action_menu_item('Review Answers', 'review_answers') ]
  ---
"review-2": "---\nevent: review_answers\nquestion: |\n  Revisit your answers\nreview:\n\
  \  - Revisit fruit: fruit\n    button: |\n      You said your favorite fruit was\n\
  \      ${ fruit }.\n  - Revisit vegetable: vegetable\n    button: |\n      You said\
  \ your favorite vegetable\n      was ${ vegetable }.\n  - Revisit fungus: fungi\n\
  \    button: |\n      You said your favorite fungus \n      was ${ fungi }.\n---"
"review-3": |-
  ---
  event: review_answers
  question: |
    Revisit your answers
  review:
    - note: |
        Revisit your food preferences.
      show if: fruit
    - Favorite fruit: fruit
    - Favorite vegetable: vegetable
    - Favorite fungus: fungi
  ---
"review-4": |-
  ---
  event: review_answers
  question: |
    Revisit your answers
  review:
    - Favorite fruit: fruit
      help: |
        You indicated you liked
        ${ fruit }.
    - Favorite vegetable: vegetable
      help: |
        You indicated you liked
        ${ vegetable }.
    - Favorite fungus: fungi
      help: |
        You indicated you liked
        ${ fungi }.
  ---
"salutation": |-
  ---
  template: letter_to_client
  content: |
    Dear ${ client.salutation() } ${ client.name.last }:

    I hope this letter finds you well.

    Blah, blah, blah.
  ---
  code: |
    client.name.first = "John"
    client.name.last = "Smith"
    client.gender = "male"
  ---
"sample-function": |-
  ---
  modules:
    - .test
  ---
  mandatory: true
  question: |
    The number after 3 is
    ${ plus_one(3) }.
  ---
"send-sms": |-
  ---
  modules:
    - docassemble.base.util
  ---
"set-language": "---\ninitial: true\ncode: |\n  set_language(language)\n---\nquestion:\
  \ |\n  What language do you speak?\nfield: language\nchoices:\n  - English: en\n\
  \  - Espa\xF1ol: es\n---"
"showif": |-
  ---
  question: |
    Please fill in the following information.
  fields:
    - Favorite fruit: fruit
    - Favorite vegetable: vegetable
    - Favorite fungus: mushroom
      show if:
        code:
          2 + 2 == 3
  ---
"showif-boolean": |-
  ---
  question: |
    Please fill in the following information.
  fields:
    - "Do you like fruit?": likes_fruit
      datatype: yesnoradio
    - "What's your favorite fruit?": favorite_fruit
      show if: likes_fruit
  ---
"shuffle": |-
  ---
  question: |
    For which of the following obscure
    candidates do you wish to vote?
  fields:
    - Type: candidate
      datatype: radio
      shuffle: true
      choices:
        - Aaron Aardvark
        - Albert Arnold
        - Felicia Fellowes
        - Miranda Moore
        - Zachariah Zephyr
  ---
"signature": |-
  ---
  question: |
    Please sign your name below.
  subquestion: |
    By signing your name, you agree to
    our terms and conditions.
  signature: target_variable
  under: |
    ${ user }
  ---
"signin": |-
  ---
  mandatory: true
  code: |
    if user_logged_in():
      goodbye_page
    else:
      sign_in_page
  ---
"single-spacing": |-
  ---
  question: |
    Here is your document.
  subquestion: |
    It demonstrates types of spacing.
  attachments:
    - name: A test document
      filename: test_document
      metadata:
        SingleSpacing: true
      content: |
        ${ client } is entitled to
        benefits plan ${ benefits }.

        Four score and seven years ago
        our fathers brought forth on
        this continent, a new nation,
        conceived in Liberty, and
        dedicated to the proposition
        that all men are created equal.

        Now we are engaged in a great
        civil war, testing whether that
        nation, or any nation so
        conceived and so dedicated,
        can long endure.

        # What about double-spacing?

        Let's try this with double
        spacing.

        [DOUBLESPACING]

        Four score and seven years ago
        our fathers brought forth on
        this continent, a new nation,
        conceived in Liberty, and
        dedicated to the proposition
        that all men are created equal.

        Now we are engaged in a great
        civil war, testing whether that
        nation, or any nation so
        conceived and so dedicated,
        can long endure.
  mandatory: true
  ---
"sms": |-
  ---
  question: |
    Hello, world!
  subquestion: |
    Are you doing well?
  yesno: doing_well
  ---
"space-underscore": |-
  ---
  question: |
    Removing spaces
  subquestion: |
    Your book is *${ book }* and
    without underscores, it is
    ${ space_to_underscore(book) }.
  sets: all_done
  ---
"static_image": |-
  ---
  code: |
    image_name = 'court'
  ---
  mandatory: true
  question: |
    An image created by code
  subquestion: |
    This is the "${ image_name }" image.

    ${ static_image(image_name + '.svg') }
  ---
"subquestion": |-
  ---
  question: |
    What is the airspeed velocity of an unladen swallow?
  subquestion: Be careful how you answer.
  fields:
    - Velocity: swallow_velocity
  ---
"table": |-
  ---
  mandatory: true
  question: |
    A table
  subquestion: |
    This is a table.

    <table class="table table-striped">
      <thead>
        <tr><th>Header 1</th><th>Header 2</th></tr>
      </thead>
      <tbody>
        <tr><td>1</td><td>$4.50</td></tr>
        <tr><td>2</td><td>$5.50</td></tr>
        <tr><td>3</td><td>$6.50</td></tr>
        <tr><td>4</td><td>$7.50</td></tr>
        <tr><td>5</td><td>$8.50</td></tr>
      </tbody>
    </table>
  ---
"terminal-screen": |-
  ---
  question: |
    Congratulations!
  subquestion: |
    You are all done with the interview.
  mandatory: true
  ---
"terms": |-
  ---
  terms:
    creeper: |
      A tall green creature that explodes if
      you get too close.
    zombie pigman: |
      A harmless creature who carries a gold
      sword.
  ---
"testmessage": |-
  ---
  code: |
    message("You suck", "Immensely!!!", show_leave=True, url="https://google.com")
  mandatory: true
  ---
"text-box-field": |-
  ---
  question: |
    Tell me the story of your life.
  fields:
    - Life Story: target_variable
      datatype: area
  ---
"text-default": |-
  ---
  question: |
    What are your favorite things to eat?
  subquestion: |
    Please be specific.
  fields:
    - Vegetable: target_variable
      default: eggplant
    - Fruit: other_target_variable
      default: |
        ${ greatest_fruit }
  ---
  code: |
    greatest_fruit = "apples"
  ---
"text-field": |-
  ---
  question: |
    What are your favorite things to eat?
  subquestion: |
    Please be specific.
  fields:
    - Vegetable: target_variable
    - Fruit: other_target_variable
  ---
"text-field-example": |-
  ---
  question: Tell me about yourself
  fields:
    - Favorite color: user_favorite_color
    - Description of your ideal vacation: user_ideal_vacation
      datatype: area
      required: false
  ---
"text-help": |-
  ---
  question: |
    What are your favorite things to eat?
  subquestion: |
    If you don't know what a vegetable
    or fruit is, click the green text.
  fields:
    - Vegetable: target_variable
      help: |
        A plant.
    - Fruit: other_target_variable
      help: |
        The pulpy, edible seed vessels
        of certain plants.
  ---
"text-hint": |-
  ---
  question: |
    What are your favorite things to eat?
  subquestion: |
    Please be specific.
  fields:
    - Vegetable: target_variable
      hint: e.g., eggplant, turnips
    - Fruit: other_target_variable
      hint: e.g., apples, oranges
  ---
"timezone-list": |-
  ---
  question: |
    What is your time zone?
  fields:
    - Time zone: user_timezone
      default: "America/New_York"
      code: |
        timezone_list()
  ---
"title-case": |-
  ---
  question: |
    Title of your book
  subquestion: |
    If your book is about
    ${ subject },
    its title should be
    "${ title_case(subject) }."
  sets: all_done
  ---
"today": |-
  ---
  question: |
    Today's date is ${ today() }.
  mandatory: true
  ---
"upload": |-
  ---
  question: |
    Please upload a picture of yourself.
  fields:
    - Picture: user_picture
      datatype: file
  ---
  question: |
    You're so adorable!
  subquestion: |
    ${ user_picture }
  mandatory: true
  ---
"upload-multiple": |-
  ---
  question: |
    Please upload pictures of yourself.
  fields:
    - Pictures: user_pictures
      datatype: files
  ---
  question: |
    Look at all those adorable photos!
  audio: ${ user_pictures }
  mandatory: true
  ---
"upload_audio": |-
  ---
  question: Please upload an MP3
  fields:
    - MP3 file: user_mp3_file
      datatype: file
  ---
  question: |
    Let's listen to what you uploaded.
  audio: ${ user_mp3_file }
  mandatory: true
  ---
"upload_audio_microphone": |-
  ---
  question: Please record some audio.
  fields:
    - MP3 file: user_audio_file
      datatype: microphone
  ---
  question: |
    Let's listen to what you recorded.
  audio: ${ user_audio_file }
  mandatory: true
  ---
"url-of": |-
  ---
  question: |
    Read more about this interview.
  subquestion: |
    Feel free to
    [read more](${ url_of('docassemble.base:hello.pdf') })
    about this interview before
    proceeding.
  field: ready_to_proceed
  ---
"value": |-
  ---
  question: Summary
  subquestion: |
    Your favorite fruit is
    ${ value('favorite_fruit') }.
  mandatory: true
  ---
"variables_as_json": "---\nmandatory: true\ncode: |\n  multi_user = True\n---\ninitial:\
  \ true\ncode: |\n  process_action()\n---\nevent: query_variables\ncode: |\n  variables_as_json()\n\
  ---\nmandatory: true\nquestion: |\n  You currently have\n  ${ nice_number(number_of_slices)\
  \ }\n  ${ noun_plural('slice', number_of_slices) }\n  of\n  ${ noun_singular(favorite_fruit)\
  \ }.\nsubquestion: |\n  Use\n  [this link](${ interview_url_action('query_variables')\
  \ })\n  to query the information from\n  another application.\n\n  You can also\
  \ change the \n  [fruit](${ url_action('favorite_fruit') })\n  and the\n  [number\
  \ of slices](${ url_action('number_of_slices') }).\n---"
"video": |-
  ---
  field: ready_to_proceed
  question: |
    Welcome to the interview.
  subquestion: |
    Please watch this introductory video
    before proceeding with the interview.
  video: |
    [YOUTUBE 9bZkp7q19f0]
  ---
"video-static": |-
  ---
  question: |
    Are you traveling to New York City?
  yesno: going_to_nyc
  video: nyc_tourism.mp4
  ---
"vimeo": |-
  ---
  field: ready_to_proceed
  question: |
    Welcome to the interview.
  subquestion: |
    Please watch this introductory video
    before proceeding with the interview.
  video: |
    [VIMEO 96044910]
  ---
"yesno": |-
  ---
  question: |
    Are you at least 18 years of age?
  yesno: over_eighteen
  ---
"yesno-custom": |-
  ---
  question: |
    Are you satisfied?
  field: user_is_satisfied
  buttons:
    - "You bet": True
    - "No way": False
  ---
"yesnomaybe": |-
  ---
  question: |
    Is Topeka the capital of Kansas?
  yesnomaybe: topeka_is_capital_of_kansas
  ---

