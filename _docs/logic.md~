---
layout: docs
title: Interview Logic
short_title: Interview Logic
---

Like `question` questions, `code` questions are not "asked" unless
they contain variables that **docassemble** needs.  All `question` and
`code` blocks are only called when and if they are needed.

In order to get your interview to start asking questions, you need to
mark at least one `question` block or `code` block with the modifier
`mandatory`.

## `mandatory`

Consider the following as a complete interview file:

{% highlight yaml %}
---
question: What is the capital of Maine?
fields:
  - Capital: maine_capital
---
question: Are you sitting down?
yesno: user_sitting_down
mandatory: true
---
question: Your socks do not match.
mandatory: true
---
{% endhighlight %}

The interview will ask "Are you sitting down" and then it will say
"Your socks do not match."  It will not ask "What is the capital of
Maine?"

A better way to control the logic of an interview is to have a single
`code` block that 

## `initial`

If you want your `code` to be run every time **docassemble** processes
your interview logic, add the `initial` modifier:

{% highlight yaml %}
---
initial: true
code: |
  my_counter = 0
---
{% endhighlight %}

## The logical order of an interview

`mandatory` and `initial` blocks are evaluated in the order they
appear in the question file.

The location of `mandatory` and `initial` blocks in the interview
matters.  **docassemble** goes through the interview file from top to
bottom, looking for `mandatory` and `initial` blocks.  When it
encounters an `include` statement, it immediately goes through the
included file from top to bottom, and then picks up where it left off.

